@function charsFromBase($base: 10) {
  /* Binary */
  @if $base == 2 {
    @return "0 1";  }
  /* Octal */
  @if $base == 8 {
    @return "0 1 2 3 4 5 6 7";  }
  /* Decimal */
  @if $base == 10 {
    @return "0 1 2 3 4 5 6 7 8 9";  }
  /* Hexadecimal */
  @if $base == 16 {
    @return "0 1 2 3 4 5 6 7 8 9 a b c d e f";  }
  /* Base 36 */
  @if $base == 36 {
    @return "0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x y z";  }
  /* Base 64 */
  @if $base == 64 {
    @return "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9" + "/";  }
  @return false;
}

@function pow($val, $pow) {
  $res: 1;
  @while($pow > 0) {
    $res: $res * $val;
    $pow: $pow - 1;
  }
  @return $res;
}

@function toInt($str, $base: 10) {
  $res   : 0;
  $chars : charsFromBase($base);
  @if $chars != false {
    $str   : if($base < 64, to-lower-case($str), $str);
    @for $i from 1 through str-length($str) {
      $char    : str-slice($str, $i, $i + 1);
      $charVal : index($char, $chars) - 1;
      $res     : $res + pow(length($base), str-length($str) - $i) * $charVal;
    }
    @return $res;
  }
  @return false;
}

@function rand($min: 0, $max: 100) {
  $str : str-slice(unique-id(), 2);
  $res : toInt($str, 16);
  @return ($res % ($max - $min)) + $min;
}
